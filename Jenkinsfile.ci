pipeline {
  agent any

  options {
    timestamps()
    buildDiscarder(logRotator(numToKeepStr: '15'))
  }

  tools {
    nodejs 'node18'
  }

  environment {
    REPO_URL = 'https://github.com/Azure-Samples/msdocs-nodejs-mongodb-azure-sample-app.git'
    APP_NAME = 'node-mongo-sample-webapp' // must match Terraform var.app_name
  }

  stages {
    stage('Checkout') {
      steps {
        git url: "${env.REPO_URL}", branch: 'main'
      }
    }

    stage('Install') {
      steps {
        bat '''
          call npm ci
        '''
      }
    }

    stage('Build') {
      steps {
        // If the sample has no build step, this is a no-op
        bat '''
          call npm run > npm_scripts.txt
          findstr /i "build" npm_scripts.txt >nul
          if %errorlevel%==0 (
            call npm run build
          ) else (
            echo No build script found. Skipping.
          )
        '''
      }
    }

    stage('Test') {
      steps {
        // If the sample has tests they'll run; otherwise this skips gracefully
        bat '''
          call npm run > npm_scripts.txt
          findstr /i "test" npm_scripts.txt >nul
          if %errorlevel%==0 (
            call npm test
          ) else (
            echo No test script found. Skipping.
          )
        '''
      }
    }

    stage('Package') {
      steps {
        bat '''
          if exist dist rmdir /s /q dist
          mkdir dist
          rem Zip the whole workspace except junk; Oryx will build on the server
          powershell Compress-Archive -Path * -DestinationPath dist\\app.zip -Force -CompressionLevel Optimal
          dir dist
        '''
      }
    }

    stage('Publish Artifact') {
      steps {
        archiveArtifacts artifacts: 'dist/app.zip', fingerprint: true
      }
    }
  }

  post {
    success {
      echo "CI complete. Artifact published: dist/app.zip"
    }
  }
}
