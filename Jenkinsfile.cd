pipeline {
  agent any

  environment {
    AZURE_CONFIG_DIR = "${WORKSPACE}\\.azure"
    APP_NAME = "node-mongo-sample-webapp"
    RG_NAME = "rg-node-mongo-jenkins"
    PLAN_NAME = "node-mongo-sample-webapp-plan"
    LOCATION = "canadacentral"
    ZIP_FILE = "app.zip"                // will copy this from CI job
    HEALTH_PATH = "/"
  }

  stages {
    stage('Download Artifact from CI') {
      steps {
        copyArtifacts(
          projectName: 'node-mongo-ci',    // üîÅ CHANGE THIS IF YOUR CI JOB NAME DIFFERS
          selector: lastSuccessful(),
          filter: 'dist/app.zip',
          target: '.'
        )
        bat 'rename dist\\app.zip app.zip'  // rename after copy to root for deploy
      }
    }

    stage('Azure Login + Deploy') {
      steps {
        withCredentials([
          string(credentialsId: 'azure-client-id', variable: 'AZ_APPID'),
          string(credentialsId: 'azure-client-secret', variable: 'AZ_PASS'),
          string(credentialsId: 'azure-tenant-id', variable: 'AZ_TENANT'),
          string(credentialsId: 'azure-subscription-id', variable: 'AZ_SUB')
        ]) {
          bat '''
            setlocal EnableExtensions EnableDelayedExpansion

            rem ===== Setup Azure config dir =====
            if not exist "%AZURE_CONFIG_DIR%" mkdir "%AZURE_CONFIG_DIR%"

            rem ===== Login to Azure =====
            call az login --service-principal -u "%AZ_APPID%" -p "%AZ_PASS%" --tenant "%AZ_TENANT%"
            if errorlevel 1 (
              echo [ERROR] Azure login failed
              exit /b 1
            )

            rem ===== Set subscription =====
            call az account set --subscription "%AZ_SUB%" || exit /b 1

            rem ===== Confirm account =====
            call az account show --query "{Name:name, ID:id}" -o table || exit /b 1

            rem ===== Deploy ZIP to Web App =====
            if not exist "%ZIP_FILE%" (
              echo [ERROR] File %ZIP_FILE% not found
              exit /b 1
            )
            call az webapp deployment source config-zip ^
              --resource-group "%RG_NAME%" ^
              --name "%APP_NAME%" ^
              --src "%ZIP_FILE%" || exit /b 1

            rem ===== Show App URL =====
            set APP_URL=https://%APP_NAME%.azurewebsites.net%HEALTH_PATH%
            echo Deployed to: !APP_URL!
          '''
        }
      }
    }
  }

  post {
    always {
      bat 'az logout || exit /b 0'
    }
    success {
      echo "‚úÖ Deployment succeeded and health check passed."
    }
    failure {
      echo "‚ùå Deployment failed. Check Jenkins logs."
    }
  }
}
