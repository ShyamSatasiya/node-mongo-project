pipeline {
  agent any

  environment {
    AZURE_CONFIG_DIR = "${WORKSPACE}\\.azure"
    APP_NAME = "node-mongo-sample-webapp"
    RG_NAME = "rg-node-mongo-jenkins"
    PLAN_NAME = "node-mongo-sample-webapp-plan"
    LOCATION = "canadacentral"
    ZIP_SOURCE = "dist\\app.zip"
    HEALTH_PATH = "/"
  }

  stages {
    stage('Verify and Deploy to Azure') {
      steps {
        withCredentials([
          string(credentialsId: 'azure-client-id', variable: 'AZ_APPID'),
          string(credentialsId: 'azure-client-secret', variable: 'AZ_PASS'),
          string(credentialsId: 'azure-tenant-id', variable: 'AZ_TENANT'),
          string(credentialsId: 'azure-subscription-id', variable: 'AZ_SUB')
        ]) {
          bat '''
            setlocal EnableExtensions EnableDelayedExpansion

            rem ===== Setup Azure config dir =====
            if not exist "%AZURE_CONFIG_DIR%" mkdir "%AZURE_CONFIG_DIR%"

            rem ===== Sanity check =====
            echo AZ_APPID=%AZ_APPID:~0,4%****
            echo AZ_TENANT=%AZ_TENANT:~0,4%****
            echo AZ_SUB=%AZ_SUB:~0,4%****

            rem ===== Login to Azure =====
            call az login --service-principal -u "%AZ_APPID%" -p "%AZ_PASS%" --tenant "%AZ_TENANT%" || exit /b 1

            rem ===== Set subscription =====
            call az account set --subscription "%AZ_SUB%" || exit /b 1

            rem ===== Confirm account =====
            call az account show --query "{Name:name, ID:id}" -o table || exit /b 1

            rem ===== Check for app.zip =====
            if not exist "%ZIP_SOURCE%" (
              echo [ERROR] File %ZIP_SOURCE% not found
              dir
              exit /b 1
            )

            rem ===== Deploy ZIP to Azure =====
            call az webapp deployment source config-zip ^
              --resource-group "%RG_NAME%" ^
              --name "%APP_NAME%" ^
              --src "%ZIP_SOURCE%" || exit /b 1

            rem ===== Show App URL =====
            set APP_URL=https://%APP_NAME%.azurewebsites.net%HEALTH_PATH%
            echo Deployed to: !APP_URL!
          '''
        }
      }
    }
  }

  post {
    always {
      bat 'az logout || exit /b 0'
    }
    success {
      echo "✅ Deployment succeeded!"
    }
    failure {
      echo "❌ Deployment failed."
    }
  }
}
