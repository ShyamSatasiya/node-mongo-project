pipeline {
  agent any

  environment {
    AZURE_CONFIG_DIR = "${WORKSPACE}\\.azure"
    APP_NAME = "node-mongo-sample-webapp"
    RG_NAME = "rg-node-mongo-jenkins"
    LOCATION = "canadacentral"
    ZIP_FILE = "app.zip"
    HEALTH_PATH = "/"
  }

  stages {

    stage('Prepare app.zip with root files') {
      steps {
        powershell '''
          Remove-Item -Force app.zip -ErrorAction SilentlyContinue

          # Copy necessary files to a temp folder
          $source = "$PWD"
          $temp = "$env:TEMP\\appzip"
          Remove-Item -Recurse -Force $temp -ErrorAction SilentlyContinue
          New-Item -ItemType Directory -Path $temp | Out-Null

          $include = @('package.json', 'package-lock.json', 'app.js', 'server.js', 'node_modules', 'public', 'views', 'routes', 'controllers')
          foreach ($item in $include) {
            $srcPath = Join-Path $source $item
            if (Test-Path $srcPath) {
              Copy-Item $srcPath -Destination $temp -Recurse -Force
            }
          }

          # Create the zip with flat root (NOT inside "dist" or subfolder)
          Compress-Archive -Path "$temp\\*" -DestinationPath "app.zip" -Force

          if (Test-Path "app.zip") {
            Write-Host "✅ app.zip created at root level."
          } else {
            Write-Host "❌ Failed to create app.zip"
            exit 1
          }
        '''
      }
    }

    stage('Azure Login + Deploy') {
      steps {
        withCredentials([
          string(credentialsId: 'azure-client-id', variable: 'AZ_APPID'),
          string(credentialsId: 'azure-client-secret', variable: 'AZ_PASS'),
          string(credentialsId: 'azure-tenant-id', variable: 'AZ_TENANT'),
          string(credentialsId: 'azure-subscription-id', variable: 'AZ_SUB')
        ]) {
          bat '''
            setlocal EnableExtensions EnableDelayedExpansion

            if not exist "%AZURE_CONFIG_DIR%" mkdir "%AZURE_CONFIG_DIR%"

            echo Logging in to Azure...
            call az login --service-principal -u "%AZ_APPID%" -p "%AZ_PASS%" --tenant "%AZ_TENANT%" || exit /b 1
            call az account set --subscription "%AZ_SUB%" || exit /b 1

            echo Validating app.zip presence...
            if not exist "%ZIP_FILE%" (
              echo ❌ app.zip not found.
              dir
              exit /b 1
            )

            echo Deploying app.zip to Azure Web App...
            call az webapp deployment source config-zip ^
              --resource-group "%RG_NAME%" ^
              --name "%APP_NAME%" ^
              --src "%ZIP_FILE%" || exit /b 1

            set APP_URL=https://%APP_NAME%.azurewebsites.net%HEALTH_PATH%
            echo ✅ Deployed successfully at: !APP_URL!
          '''
        }
      }
    }
  }

  post {
    always {
      bat 'az logout || exit /b 0'
    }
    success {
      echo "✅ Deployment succeeded!"
    }
    failure {
      echo "❌ Deployment failed. Check Jenkins log and ZIP structure."
    }
  }
}
